[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "yamcs-mcp-server"
version = "0.3.0-beta"
description = "MCP server for Yamcs Mission Control System"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [{name = "Paul M Ramirez", email = "paul@paulramirez.com"}]
keywords = ["yamcs", "mcp", "space", "mission-control", "satellite"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "mcp>=1.3.0",              # Model Context Protocol
    "fastmcp>=2.10.1",         # FastMCP framework
    "yamcs-client>=1.10.0",    # Yamcs Python client
    "pydantic>=2.10.0",        # Data validation
    "pydantic-settings>=2.0.0", # Settings management
    "python-dotenv>=1.0.0",    # Environment file support
    "structlog>=24.4.0",       # Structured logging
    "httpx>=0.27.0",           # HTTP client (for FastMCP)
    "uvloop>=0.21.0 ; platform_system != 'Windows'", # Fast event loop (non-Windows)
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "mypy>=1.16.0",
    "ruff>=0.12.0",
    "pre-commit>=3.5.0",
]

docs = [
    "mkdocs>=1.5.0",            # Documentation
    "mkdocs-material>=9.4.0",   # Modern docs theme
    "mkdocstrings[python]>=0.24.0", # API docs generation
]

[project.urls]
Homepage = "https://github.com/PaulMRamirez/yamcs-mcp-server"
Documentation = "https://github.com/PaulMRamirez/yamcs-mcp-server#readme"
Repository = "https://github.com/PaulMRamirez/yamcs-mcp-server.git"
Issues = "https://github.com/PaulMRamirez/yamcs-mcp-server/issues"

[project.scripts]
yamcs-mcp = "yamcs_mcp.__main__:main"

[tool.hatch.build.targets.wheel]
packages = ["src/yamcs_mcp"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["yamcs_mcp"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true
namespace_packages = true
show_error_codes = true
show_column_numbers = true
pretty = true

# Allow gradual typing
disallow_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false  # Allow untyped decorators for now

# Import discovery
ignore_missing_imports = true
follow_imports = "normal"

[[tool.mypy.overrides]]
module = [
    "yamcs.*",
    "mcp.*",
    "fastmcp.*",
    "structlog.*",
]
ignore_missing_imports = true

[tool.ruff]
line-length = 88
target-version = "py311"
src = ["src", "tests"]

[tool.ruff.lint]
extend-select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line-too-long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["yamcs_mcp"]